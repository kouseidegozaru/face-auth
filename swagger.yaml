swagger: '2.0'
info:
  title: API Documentation
  description: APIドキュメント
  version: v1
host: 127.0.0.1:8000
schemes:
- http
basePath: /
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /recognizer/predict/{id}/:
    post:
      operationId: recognizer_predict_create
      summary: 指定のgroupの特徴モデルから推論
      description: 指定のgroupの特徴モデルから推論します。
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: object
          properties:
            image:
              type: string
              format: binary
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '201':
          description: 成功
        '400':
          description: シリアライザーエラーまたは推論エラーまたは画像に顔が存在しない
        '403':
          description: 未認証のユーザー
        '404':
          description: groupが見つからない
        '412':
          description: 特徴モデルが存在しない
      tags:
      - recognizer
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /recognizer/train/{id}/:
    post:
      operationId: recognizer_train_create
      summary: 指定のgroupのTrainingDataを学習
      description: 指定のgroupのTrainingDataを学習します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
        '400':
          description: シリアライザーエラーまたは学習エラー
        '403':
          description: 未認証のユーザー
        '404':
          description: groupが見つからない
        '412':
          description: TrainingDataの数が2つより少ない
      tags:
      - recognizer
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /recognizer/training-data/:
    get:
      operationId: recognizer_training-data_list
      summary: TrainingDataの一覧を取得
      description: 現在のユーザーのTrainingData一覧を取得します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
          schema:
            type: array
            items:
              $ref: '#/definitions/TrainingData'
        '404':
          description: Not Found
      tags:
      - recognizer
    parameters: []
  /recognizer/training-data/{id}/:
    get:
      operationId: recognizer_training-data_read
      summary: 特定のTrainingDataを取得
      description: 特定のTrainingDataを取得します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
          schema:
            $ref: '#/definitions/TrainingData'
        '403':
          description: 未認証のユーザー
        '404':
          description: training dataが見つからない
      tags:
      - recognizer
    patch:
      operationId: recognizer_training-data_update
      summary: 特定のTrainingDataを更新
      description: 特定のTrainingDataを更新します。
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: object
          properties:
            image:
              type: string
              format: binary
            label:
              type: string
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
          schema:
            $ref: '#/definitions/TrainingData'
        '400':
          description: シリアライザーエラー
        '403':
          description: 未認証のユーザー
        '404':
          description: training dataが見つからない
      tags:
      - recognizer
    delete:
      operationId: recognizer_training-data_delete
      summary: 特定のTrainingDataを削除
      description: 特定のTrainingDataを削除します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '204':
          description: 成功
        '400':
          description: シリアライザーエラー
        '403':
          description: 未認証のユーザー
        '404':
          description: training dataが見つからない
      tags:
      - recognizer
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /recognizer/training-groups/:
    get:
      operationId: recognizer_training-groups_list
      summary: TrainingGroupの一覧を取得
      description: 現在のユーザーのTrainingGroup一覧を取得します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
          schema:
            type: array
            items:
              $ref: '#/definitions/TrainingGroup'
        '404':
          description: Not Found
      tags:
      - recognizer
    post:
      operationId: recognizer_training-groups_create
      summary: TrainingGroupを作成
      description: TrainingGroupを作成します。
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TrainingGroup'
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '201':
          description: 成功
        '400':
          description: シリアライザーエラー
        '403':
          description: 未認証のユーザー
        '404':
          description: groupが見つからない
      tags:
      - recognizer
    parameters: []
  /recognizer/training-groups/{group_pk}/images/:
    get:
      operationId: recognizer_training-groups_images_read
      summary: 指定のgroupのTrainingDataの一覧を取得
      description: 現在のユーザーのTrainingData一覧を取得します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
          schema:
            type: array
            items:
              $ref: '#/definitions/TrainingData'
        '404':
          description: groupが見つからない
      tags:
      - recognizer
    post:
      operationId: recognizer_training-groups_images_create
      summary: 指定のgroupにTrainingDataを作成
      description: 指定のgroupにTrainingDataを作成します。
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: object
          properties:
            image:
              type: string
              format: binary
            label:
              type: string
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '201':
          description: 成功
        '400':
          description: シリアライザーエラーまたは画像に顔が存在しない
        '403':
          description: 未認証のユーザー
        '404':
          description: groupが見つからない
      tags:
      - recognizer
    parameters:
    - name: group_pk
      in: path
      required: true
      type: string
  /recognizer/training-groups/{id}/:
    get:
      operationId: recognizer_training-groups_read
      summary: 特定のTrainingGroupを取得
      description: 特定のTrainingGroupを取得します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
          schema:
            $ref: '#/definitions/TrainingGroup'
        '403':
          description: 未認証のユーザー
        '404':
          description: groupが見つからない
      tags:
      - recognizer
    patch:
      operationId: recognizer_training-groups_update
      summary: 特定のTrainingGroupを更新
      description: 特定のTrainingGroupを更新します。
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TrainingGroup'
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '200':
          description: 成功
          schema:
            $ref: '#/definitions/TrainingGroup'
        '400':
          description: シリアライザーエラー
        '403':
          description: 未認証のユーザー
        '404':
          description: groupが見つからない
      tags:
      - recognizer
    delete:
      operationId: recognizer_training-groups_delete
      summary: 特定のTrainingGroupを削除
      description: 特定のTrainingGroupを削除します。
      parameters:
      - name: Authorization
        in: header
        description: 認証トークン
        type: string
      responses:
        '204':
          description: 成功
        '400':
          description: シリアライザーエラー
        '403':
          description: 未認証のユーザー
        '404':
          description: groupが見つからない
      tags:
      - recognizer
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /users/login/:
    post:
      operationId: users_login_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CustomLogin'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CustomLogin'
      tags:
      - users
    parameters: []
  /users/logout/:
    get:
      operationId: users_logout_list
      summary: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.
      description: Accepts/Returns nothing.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    post:
      operationId: users_logout_create
      summary: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.
      description: Accepts/Returns nothing.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - users
    parameters: []
  /users/password/change/:
    post:
      operationId: users_password_change_create
      summary: Calls Django Auth SetPasswordForm save method.
      description: |-
        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PasswordChange'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordChange'
      tags:
      - users
    parameters: []
  /users/password/reset/:
    post:
      operationId: users_password_reset_create
      summary: Calls Django Auth PasswordResetForm save method.
      description: |-
        Accepts the following POST parameters: email
        Returns the success/fail message.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PasswordReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordReset'
      tags:
      - users
    parameters: []
  /users/password/reset/confirm/:
    post:
      operationId: users_password_reset_confirm_create
      summary: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.
      description: |-
        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
      - users
    parameters: []
  /users/registration/:
    post:
      operationId: users_registration_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CustomRegister'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CustomRegister'
      tags:
      - users
    parameters: []
  /users/registration/account-confirm-email/{key}/:
    post:
      operationId: users_registration_account-confirm-email_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/VerifyEmail'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/VerifyEmail'
      tags:
      - users
    parameters:
    - name: key
      in: path
      required: true
      type: string
  /users/registration/resend-email/:
    post:
      operationId: users_registration_resend-email_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ResendEmailVerification'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ResendEmailVerification'
      tags:
      - users
    parameters: []
  /users/registration/verify-email/:
    post:
      operationId: users_registration_verify-email_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/VerifyEmail'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/VerifyEmail'
      tags:
      - users
    parameters: []
  /users/user/:
    get:
      operationId: users_user_read
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
      - users
    put:
      operationId: users_user_update
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserDetails'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
      - users
    patch:
      operationId: users_user_partial_update
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserDetails'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
      - users
    parameters: []
definitions:
  TrainingData:
    required:
    - label
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      group:
        title: Group
        type: string
        format: uuid
        readOnly: true
      image:
        title: 画像
        type: string
        readOnly: true
        format: uri
      label:
        title: ラベル
        type: string
        maxLength: 100
        minLength: 1
      created_at:
        title: 作成日
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: 更新日
        type: string
        format: date-time
        readOnly: true
  TrainingGroup:
    required:
    - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: 名前
        type: string
        maxLength: 100
        minLength: 1
      owner:
        title: Owner
        type: string
        format: uuid
        readOnly: true
      created_at:
        title: 作成日
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: 更新日
        type: string
        format: date-time
        readOnly: true
  CustomLogin:
    required:
    - password
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
      password:
        title: Password
        type: string
        minLength: 1
  PasswordChange:
    required:
    - new_password1
    - new_password2
    type: object
    properties:
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
  PasswordReset:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
    - new_password1
    - new_password2
    - uid
    - token
    type: object
    properties:
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  CustomRegister:
    required:
    - email
    - password1
    - password2
    - name
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password1:
        title: Password1
        type: string
        minLength: 1
      password2:
        title: Password2
        type: string
        minLength: 1
      name:
        title: Name
        type: string
        minLength: 1
  VerifyEmail:
    required:
    - key
    type: object
    properties:
      key:
        title: Key
        type: string
        minLength: 1
  ResendEmailVerification:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  UserDetails:
    type: object
    properties:
      pk:
        title: Id
        type: string
        format: uuid
        readOnly: true
      email:
        title: メールアドレス
        type: string
        format: email
        readOnly: true
        minLength: 1
